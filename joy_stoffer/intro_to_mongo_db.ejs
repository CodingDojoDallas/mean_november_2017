1.  Create a database called 'my_first_db'.
     - use my_first_db

2.  Create students collection.
     - db.createCollection('students')

3.  Each document you insert into this collection should have the following format: ({name: STRING, home_state: STRING, lucky_number: NUMBER, birthday: {month: NUMBER, day: NUMBER, year: NUMBER}})
4.  Create 5 students with the appropriate info.
     -> db.students.insert({name: "Kyle", home_state: "California", lucky_number: 7, birthday:{month: 11, day: 26, year: 1985}})
     -> db.students.insert({name: "Joy", home_state: "Iowa", lucky_number: 8, birthday:{month: 7, day: 5, year: 1978}})
     -> db.students.insert({name: "Rocky", home_state: "Texas", lucky_number: 4, birthday:{month: 8, day: 5, year: 1978}})
     -> db.students.insert({name: "Tum Tum", home_state: "Texas", lucky_number: 6, birthday:{month: 8, day: 5, year: 1978}})
     -> db.students.insert({name: "Colt", home_state: "Texas", lucky_number: 8, birthday:{month: 8, day: 5, year: 1978}})

5.  Get all students.
     -db.students.find()

6.  Retrieve all students who are from California (San Jose Dojo) or Washington (Seattle Dojo).
     -db.students.find({home_state: "Texas"})

7.  Get all students whose lucky number is:
          1)  greater than 3
               - db.students.find({lucky_number: {$gt: 3}})
          2)  less than or equal to 10
               - db.students.find({lucky_number: {$lte: 10}})
          3)  between 1 and 9 (inclusive)
               -db.students.find({$and: [{lucky_number: {$gte: 1}}, {lucky_number: {$lte: 9}}]})

8.  Add a field to each student collection called 'interests' that is an ARRAY.  It should contain the following entries: 'coding', 'brunch', 'MongoDB'. Do this in ONE operation.
     - db.students.update({},{$set:{"interest": ["coding","brunch", "MongoDB"]}},false, true)

9.  Add some unique interests for each particular students into each of their interest arrays.
     - db.students.update({"_id" : ObjectId("5a00fb3b539483714e834c83")},{$push: {interest: "taxes"}})
     - db.students.update({ name: "Colty"},{$push: {interest: "taxes"}})
     - db.students.update({ name: "Rocky"},{$push: {interest: "bowling"}})


10.  Add the interest 'taxes' into someone's interest array.
     -db.students.update({"_id" : ObjectId("5a00fb3b539483714e834c83")},{$push: {interest: "taxes"}})

11.  Remove the 'taxes' interest you just added.
     - db.students.update({ name: "Cole"},{$pop: {interest: "taxes"}})

12.  Remove all students who are from California (or Washington). (or Texas)
     - db.students.remove({home_state: "Texas"})
13.  Remove a student by name.
     - db.students.remove({name: "Colty"})

14.  Remove a student whose lucky number is greater than 5 (JUST ONE)
     - db.students.deleteOne({lucky_number: {$gt: 5}})

15.  Add a field to each student collection called 'number_of_belts' and set it to 0.
     - db.students.update({},{$set:{"number_of_belts": 0 }},false, true)

16.  Increment this field by 1 for all students in Washington (Seattle Dojo).
     - db.students.update({home_state: "Texas"},{$set:{"number_of_belts": 1 }},false, true)

17.  Rename the 'number_of_belts' field to 'belts_earned'
      - db.students.update({}, {$rename:{'number_of_belts': 'belts_earned'}}, false, true)

18.  Remove the 'lucky_number' field.
     - db.students.update({}, {$unset: {lucky_number: ""}}, false, true)

19.  Add a 'updated_on' field, and set the value as the current date.
     - db.students.update({},{$currentDate: {updated_on: true}},false, true)
